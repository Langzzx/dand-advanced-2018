X = rnorm(200)
Plot(X)
Plot(x)
plot(x)
plot(X)
install.packages('ggplot2', dependencies = TRUE)
library(ggplot2)
install.packages('RColorBrewer', dependencies = TRUE)
library(RColorBrewer)
data("diamonds")
qplot(data = diamonds, x=carat, y = price, color=cut) + scale_color_brewer(palette = 'Accent')
install.packages("swirl")
library(swirl)
swirl()
udacious <- c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla")
udacious
numbers <- c(1:10)
numbers
numbers <- c(numbers, 11:20)
numbers
udacious <- c("Chris Saden", "Lauren Castellano",
"Sarah Spikes","Dean Eckles",
"Andy Brown", "Moira Burke",
"Kunal Chawla", YOUR_NAME)
mystery = nchar(udacious)
mystery
mystery == 11
udacious[mystery == 11]
data(mtcars)
names(mtcars)
?mtcars
mtcars
str(mtcars)
dim(mtcars)
# 10. Read the documentation for row.names if you're want to know more.
?row.names
# Run this code to see the current row names in the data frame.
row.names(mtcars)
# Run this code to change the row names of the cars to numbers.
row.names(mtcars) <- c(1:32)
# Now print out the data frame by running the code below.
mtcars
data(mtcars)
head(mtcars, 10)
# The head() function prints out the first six rows of a data frame
# by default. Run the code below to see.
head(mtcars)
# I think you'll know what this does.
tail(mtcars, 3)
mtcars$mpg
mean(mtcars$mpg)
pwd()
install.packages('dplyr')
pf.fc_by_age <- pf %>%
group_by(age) %>%
summarise(friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n()) %>%
arrange(age)
pf.fc_by_age <- pf %.%
group_by(age) %>%
summarise(friend_count_mean = mean(friend_count),
friend_count_median = median(friend_count),
n = n()) %>%
arrange(age)
library(dplyr)
library(ggplot2)
pf <- read.delim('pseudo_facebook.tsv')
library(dplyr)
## filter and logical op
filter(pf, age == 18 | gender == 'female')
age_18_or_29 <- filter(pf, age %in% c(18, 29))
## chain functions together %>%
pf.fc_by_age_gender <- pf %>%
filter(!is.na(gender)) %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n()) %>%
ungroup() %>%
arrange(age)
head(pf.fc_by_age_gender)
ggplot(aes(x = age, y = median_friend_count),
data = pf.fc_by_age_gender) +
geom_line(aes(color = gender))
install.packages('reshape2')
library(reshape2)
install.packages('reshape2')
install.packages("reshape2")
library(reshape2)
install.packages("reshape2")
install.packages("reshape2")
library(reshape2)
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(gender))) +
geom_line(aes(color = gender))
library(ggplot2)
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(gender))) +
geom_line(aes(color = gender))
```{r if not use stat and fun.y}
## if not use stat and fun.y}
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(gender))) +
geom_line(aes(color = gender))
library(reshape2)
pf.fc_by_age_gender.wide <- dcast(pf.fc_by_age_gender,
age ~ gender,
value.var = 'median_friend_count')
?dcast
head(pf.fc_by_age_gender.wide)
pf.fc_by_age_gender.wide <- subset(pf.fc_by_age_gender[c('age', 'gender', 'median_friend_count')], !is.na(gender)) %>%
spread(gender, median_friend_count) %>%
mutate(ratio = male / female)
library(tidyr)
pf.fc_by_age_gender.wide <- subset(pf.fc_by_age_gender[c('age', 'gender', 'median_friend_count')], !is.na(gender)) %>%
spread(gender, median_friend_count) %>%
mutate(ratio = male / female)
pf.fc_by_age_gender.wide <- subset(pf.fc_by_age_gender[c('age', 'gender', 'median_friend_count')], !is.na(gender)) %>%
spread(gender, median_friend_count) %>%
mutate(ratio = male / female)
library(dplyr)
pf.fc_by_age_gender.wide <- subset(pf.fc_by_age_gender[c('age', 'gender', 'median_friend_count')], !is.na(gender)) %>%
spread(gender, median_friend_count) %>%
mutate(ratio = male / female)
head(pf.fc_by_age_gender.wide)
ggplot(aes(x = age, y = female/male), data = pf.fc_by_age_gender.wide) +
geom_line() +
geom_hline(yintercept = 1, alpha = 0.3, linetype = 2)
ggplot(aes(x = age, y = female/male), data = pf.fc_by_age_gender.wide) +
geom_line() +
geom_hline(yintercept = 1, alpha = 0.5, linetype = 2)
ggplot(aes(x = age, y = female/male), data = pf.fc_by_age_gender.wide) +
geom_line() +
geom_hline(yintercept = 1, alpha = 0.5, linetype = 3)
ggplot(aes(x = age, y = female/male), data = pf.fc_by_age_gender.wide) +
geom_line() +
geom_hline(yintercept = 1, alpha = 0.5, linetype = 6)
ggplot(aes(x = age, y = female/male), data = pf.fc_by_age_gender.wide) +
geom_line() +
geom_hline(yintercept = 1, alpha = 0.3, linetype = 6)
pf$year_joined <- floor(2014 - pf$tenure/365)
View(pf)
summary(pf$year_joined)
table(pf$year_joined)
```{r Cut a Variable}
?cut
pf$year_joined.bucket <- cut(pf$year_joined,
c(2004, 2009, 2011, 2012, 2014))
table(pf$year_joined.bucket)
pf$year_joined.bucket <- cut(pf$year_joined,
c(2004, 2009, 2011, 2012, 2014))
table(pf$year_joined.bucket)
head(pf)
table(pf$year_joined.bucket, useNA = 'ifany')
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(year_joined.bucket))) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median)
table(pf$year_joined.bucket)
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(year_joined.bucket))) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = mean, linetype = 2)
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(year_joined.bucket))) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = median, linetype = 5)
ggplot(aes(x = age, y = friend_count),
data = subset(pf, !is.na(year_joined.bucket))) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median) +
geom_line(stat = 'summary', fun.y = median, linetype = 5)
View(pf)
?pf
time <- pf$tenure > 0
max(time)
time
time <- pf(pf$tenure > 0)
max(pf$tenure)
table(pf$tenure)
with(subset(pf, tenure >= 1), summary(friend_count / tenure))
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure >= 1)) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = mean, linetype = 5)
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure >= 1)) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = mean, linetype = 2)
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure >= 1)) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = mean)
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure >= 1)) +
geom_line(aes(color = year_joined.bucket),
stat = 'summary',
fun.y = mean)
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure >= 1)) +
geom_line(aes(color = year_joined.bucket),
stat = 'summary',
fun.y = mean)
ggplot(aes(x = 7 * round(tenure / 7), y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean)
```{r}
ggplot(aes(x = 90 * round(tenure / 90), y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean)
ggplot(aes(x = 30 * round(tenure / 30), y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean)
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure >= 1)) +
geom_smooth(aes(color = year_joined.bucket),
stat = 'summary',
fun.y = mean)
ggplot(aes(x = tenure, y = friendships_initiated / tenure),
data = subset(pf, tenure >= 1)) +
geom_smooth(aes(color = year_joined.bucket))
ggplot(aes(x = 90 * round(tenure / 90), y = friendships_initiated / tenure),
data = subset(pf, tenure > 0)) +
geom_line(aes(color = year_joined.bucket),
stat = "summary",
fun.y = mean)
yo <- read.csv('yogurt.csv')
str(yo)
str(yo)
## change id from int to a factor
yo$id <- factor(yo$id)
str(yo)
View(yo)
ggplot(x = yo, y = prices)
ggplot(data = yo, y = prices)
ggplot(data = yo, x = prices)
ggplot(aes(data = yo, x = prices))
ggplot(aes(data = yo, x = prices)) +
geom_bar()
ggplot(aes(x = prices, data = yo)) +
geom_bar()
ggplot(aes(x = prices),  data = yo) +
geom_bar()
install.packages('ggthemes', dependencies = TRUE)
ggplot(aes(x = prices, y = ),  data = yo) +
geom_histogram()
ggplot(aes(x = price),  data = yo) +
geom_histogram()
ggplot(aes(x = price),  data = yo) +
geom_histogram(color = 'r')
ggplot(aes(x = price),  data = yo) +
geom_histogram()
summary(yo)
length(unique(yo$price))
yo <- transform(yo, all.purchases =strawberry + blueberry + pina.colada + plain
+ ixed.berry)
yo <- transform(yo, all.purchases =strawberry + blueberry + pina.colada + plain
+ mixed.berry)
summary(yo)
ggplot(aes(x = price), data = yo) +
geom_histogram(binwidth = 1, fill = I('099D99')))
ggplot(aes(x = price), data = yo) +
geom_histogram(binwidth = 1)
ggplot(aes(x = price), data = yo) +
geom_histogram(binwidth = 1, fill = I('099DD9'))
ggplot(aes(x = price), data = yo) +
geom_histogram(binwidth = 1, fill = I('#099DD9'))
ggplot(aes(x = all.purchase), data = yo) +
geom_histogram(binwidth = 1, fill = I('#099DD9'))
ggplot(aes(x = all.purchases), data = yo) +
geom_histogram(binwidth = 1, fill = I('#099DD9'))
ggplot(aes(x = time, y = price), data = yo) +
geom_jitter(alpha = 1/4, shape = 42, fill = I('#F79420'))
ggplot(aes(x = time, y = price), data = yo) +
geom_jitter(alpha = 1/4, shape = 21, fill = I('#F79420'))
set.seed(4230)
sample.id <- sample(levels(yo$id), 16)
ggplot(aes(x = time, y = price),
data = subset(yo, id %in% sample.id)) +
facet_wrap( ~ id) +
geom_line() +
geom_point(aes(size = all.purchases), pch = 1)
table(yo$all.purchases)
setwd("~/workplace/udacity/dataAnalystAdvance/dand-advanced-2018")
library(ggplot2)
library(knitr)
library(dplyr)
# Load the Data
rw <- read.csv('wineQualityReds.csv')
View(rw)
summary(rw)
table(rw$quality)
table(rw$quality)
table(rw$fixed.acidity)
table(rw$quality)
table(rw$alcohol)
table(rw$quality)
# Load the Data
rw <- read.csv('wineQualityReds.csv')
View(rw)
summary(rw)
table(rw$quality)
table(rw$alcohol)
names(rw)
ggplot(aes(x = alcohol), data = rw) +
geom_histogram(binwidth = 1)
ggplot(aes(x = alcohol), data = rw) +
geom_histogram()
ggplot(aes(x = quality), data = rw) +
geom_histogram()
ggplot(aes(x = alcohol), data = rw) +
geom_histogram()
ggplot(aes(x = alcohol), data = rw) +
geom_histogram(binwidth = 0.5)
ggplot(aes(x = residual.sugar), data = rw) +
geom_histogram(binwidth = 0.5)
ggplot(aes(x = residual.sugar), data = rw) +
geom_histogram()
table(rw$pH)
ggplot(aes(x = residual.sugar), data = rw) +
geom_histogram()
ggplot(aes(x = pH), data = rw) +
geom_histogram()
table(rw$pH)
ggplot(aes(x = pH), data = rw) +
geom_histogram(binwidth = 0.2)
ggplot(aes(x = pH), data = rw) +
geom_histogram()
ggplot(aes(pH, quality), data = rw) +
geom_point()
ggplot(aes(residual.sugar, quality), data = rw) +
geom_point()
ggplot(aes(x = pH, y = quality), data = rw)) +
ggplot(aes(x = pH, y = quality), data = rw) +
geom_line(aes(color = quality), stat = 'summary', fun.y = median)
ggplot(aes(x = pH, y = sulphates), data = rw) +
geom_line(aes(color = quality), stat = 'summary', fun.y = median)
ggplot(aes(x =sulphates, y = pH), data = rw) +
geom_line(aes(color = quality), stat = 'summary', fun.y = median)
ggplot(data = rw, aes(x = quality)) +
geom_histogram(binwidth = 1) +
#scale_x_continuous(breaks = 1:31) +
facet_wrap(~quality)
ggplot(data = rw, aes(x = pH)) +
geom_histogram(binwidth = 1) +
#scale_x_continuous(breaks = 1:31) +
facet_wrap(~quality)
data(rw)
data(rw)
ggplot(data = rw, aes(x = pH)) +
geom_histogram(binwidth = 1) +
#scale_x_continuous(breaks = 1:31) +
facet_wrap(~quality)
ggplot(data = rw, aes(x = pH, y = sulphates)) +
geom_histogram(binwidth = 1) +
#scale_x_continuous(breaks = 1:31) +
facet_wrap(~quality)
ggplot(data = rw, aes(x = pH, y = sulphates)) +
geom_line() +
#scale_x_continuous(breaks = 1:31) +
facet_wrap(~quality)
str(rw)
ggplot(aes(x = fixed.acidity, y =  volatile.acidity), data = rw) +
geom_point()
ggplot(aes(x = free.sulfur.dioxide, y =  total.sulfur.dioxide), data = rw) +
geom_point()
ggplot(aes(x = sulphates, y =  total.sulfur.dioxide), data = rw) +
geom_point()
ggplot(aes(x = free.sulfur.dioxide, y =  total.sulfur.dioxide), data = rw2) +
geom_point()
# Remove some outlier
rw2 <- subset(rw, rw$total.sulfur.dioxide < 200)
ggplot(aes(x = free.sulfur.dioxide, y =  total.sulfur.dioxide), data = rw2) +
geom_point()
ggplot(aes(x = free.sulfur.dioxide, y =  total.sulfur.dioxide), data = rw2) +
geom_point(color = quality)
ggplot(aes(x = free.sulfur.dioxide, y =  total.sulfur.dioxide), data = rw2) +
geom_point(color = rw2$quality)
ggplot(aes(x = free.sulfur.dioxide, y =  total.sulfur.dioxide), data = rw2) +
geom_point(color = rw2$quality, show.legend = True)
ggplot(aes(x = free.sulfur.dioxide, y =  total.sulfur.dioxide), data = rw2) +
geom_point(color = rw2$quality, show.legend = T)
ggplot(aes(x = free.sulfur.dioxide, y =  total.sulfur.dioxide), data = rw2) +
geom_point(color = rw2$quality, show.legend = F)
ggplot(aes(x = free.sulfur.dioxide, y =  total.sulfur.dioxide), data = rw2) +
geom_point(color = rw2$quality, show.legend = T)
ggplot(aes(x = free.sulfur.dioxide, y =  total.sulfur.dioxide), data = rw2) +
geom_point(color = rw2$quality)
ggplot(aes(x = sulphates, y =  total.sulfur.dioxide), data = rw) +
geom_point()
ggplot(aes(x = sulphates, y =  total.sulfur.dioxide), data = rw2) +
geom_point()
ggplot(aes(y = sulphates, x =  total.sulfur.dioxide), data = rw2) +
geom_point()
ggplot(aes(y = pH, x =  total.sulfur.dioxide), data = rw2) +
geom_point()
ggplot(aes(y = pH, x =  total.sulfur.dioxide), data = rw) +
geom_point()
ggplot(aes(y = pH, x =  total.sulfur.dioxide), data = rw2) +
geom_point()
ggplot(aes(x = free.sulfur.dioxide, y =  total.sulfur.dioxide), data = rw2) +
geom_point(aes(color = rw2$quality))
ggplot(aes(x = quality), data = rw2) +
geom_histogram()
pf <- read.delim('pseudo_facebook.tsv')
is.na(rw2$quality)
table(is.na(rw2$quality))
ggplot(aes(x = chlorides, y = quality), data = rw2) +
geom_boxplot() +
stat_summary(fun.y = mean, geom = 'point', shape = 4)
ggplot(aes(x = chlorides, y = quality), data = rw2) +
geom_boxplot() +
stat_summary(fun.y = mean, geom = 'point')
ggplot(aes(x = chlorides, y = quality), data = rw2) +
geom_boxplot()
ggplot(aes(x = quality, y = chlorides), data = rw2) +
geom_boxplot()
ggplot(aes(x = quality, y = chlorides), data = rw2) +
geom_boxplot() +
stat_summary(fun.y = mean, geom = 'point', shape = 4)
ggplot(aes(x = quality, y = chlorides), data = rw2) +
geom_boxplot()
ggplot(aes(quality, alcohol, group = quality), data = rw2)+
geom_jitter(alpha = 0.25)+
geom_boxplot(color = 'red')+
geom_smooth(method = 'lm')
ggplot(aes(quality, alcohol, group = quality), data = rw2)+
geom_jitter(alpha = 0.25)+
geom_boxplot(color = quality)+
geom_smooth(method = 'lm')
ggplot(aes(quality, alcohol, group = quality), data = rw2)+
geom_jitter(alpha = 0.25) +
geom_boxplot(color = quality) +
geom_smooth(method = 'lm')
ggplot(aes(quality, alcohol, group = quality), data = rw2)+
geom_jitter(alpha = 0.25) +
geom_boxplot(aes(color = quality)) +
geom_smooth(method = 'lm')
ggplot(aes(quality, alcohol, group = quality), data = rw2)+
geom_point(alpha = 0.25) +
geom_boxplot(aes(color = quality)) +
geom_smooth(method = 'lm')
